#include "constants.spl"

vec3 importance_sample_ggx(vec2 Xi, vec3 normal, float roughness)
{
	const float alpha        = pow(roughness, 2.0);
	const float alphaSquared = pow(alpha    , 2.0);
	
	const float phi          = TAU * Xi.x;
	const float cosine       = sqrt((1.0 - Xi.y) / (1.0 + (alphaSquared - 1.0) * Xi.y));
	const float sine         = sqrt(1.0 - pow(cosine, 2.0));
	
	const vec3  halfway      = vec3(cos(phi) * sine, sin(phi) * sine, cosine);
	
	const vec3  up           = abs(normal.z) < 0.999 ? vec3(0.0, 0.0, 1.0) : vec3(1.0, 0.0, 0.0);
	const vec3  tangent      = normalize(cross(up, normal));
	const vec3  bitangent    = cross(normal, tangent);
	
	const vec3  vector       = tangent   * halfway.x 
	                         + bitangent * halfway.y 
							 + normal    * halfway.z;
	
	return normalize(vector);
}
